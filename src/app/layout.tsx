import type { Metadata, Viewport } from "next";
import { Geist, Geist_Mono } from "next/font/google";
import "./globals.css";

const geistSans = Geist({
  variable: "--font-geist-sans",
  subsets: ["latin"],
});

const geistMono = Geist_Mono({
  variable: "--font-geist-mono",
  subsets: ["latin"],
});

export const metadata: Metadata = {
  title: "Create Next App",
  description: "Generated by create next app",
};

export const viewport: Viewport = {
  width: "device-width",
  initialScale: 1,
  maximumScale: 1,
  userScalable: "no",
};

export default function RootLayout({
  children,
}: Readonly<{
  children: React.ReactNode;
}>) {
  return (
    <html lang="en">
      <body
        className={`${geistSans.variable} ${geistMono.variable} antialiased`}
      >
        <header className="sticky top-0 z-30 w-full border-b border-black/10 dark:border-white/10 bg-background/80 backdrop-blur supports-[backdrop-filter]:bg-background/60">
          <div className="mx-auto max-w-5xl px-4 py-2 flex items-center justify-between">
            <div className="text-sm opacity-70">boardsmith</div>
            {/* Client component renders auth controls */}
            {/* @ts-expect-error Async Server Component boundary */}
            <ClientAuthSlot />
          </div>
        </header>
        <main>{children}</main>
      </body>
    </html>
  );
}

// Separate client wrapper to keep layout a server component
function ClientAuthSlot() {
  // Dynamic import inside avoids marking layout as client
  // eslint-disable-next-line @typescript-eslint/no-var-requires
  const AuthButton = require("@/app/components/AuthButton").default as any;
  return <AuthButton />;
}
