import type { Metadata, Viewport } from "next";
import { Geist, Geist_Mono } from "next/font/google";
import "./globals.css";

const geistSans = Geist({
  variable: "--font-geist-sans",
  subsets: ["latin"],
});

const geistMono = Geist_Mono({
  variable: "--font-geist-mono",
  subsets: ["latin"],
});

export const metadata: Metadata = {
  title: "Create Next App",
  description: "Generated by create next app",
};

export const viewport: Viewport = {
  width: "device-width",
  initialScale: 1,
  maximumScale: 1,
  userScalable: "no",
};

export default function RootLayout({
  children,
}: Readonly<{
  children: React.ReactNode;
}>) {
  return (
    <html lang="en">
      <body
        className={`${geistSans.variable} ${geistMono.variable} antialiased`}
      >
        {/* @ts-expect-error Async Server Component boundary */}
        <ClientHeaderSlot />
        <main>{children}</main>
      </body>
    </html>
  );
}

// Separate client wrapper to keep layout a server component
function ClientHeaderSlot() {
  // Dynamic import to keep layout a server component
  // eslint-disable-next-line @typescript-eslint/no-var-requires
  const AppHeader = require("@/app/components/AppHeader").default as any;
  return <AppHeader />;
}
